#include "Proxy.h"
#include<windows.h>

using namespace std;

void Proxy::test() {
	CommitteeOfDigging *myCom = new CommitteeOfDigging();
	cout << "Proxy模式简介：\n";
	cout << "代理是代替服务器去接受请求者的请求的中间人。\n";
	cout << "在某些情况下，客户端直接请求服务器会被拒绝，需要通过代理服务器间接访问。有些简单的服务，代理服务器甚至可以直接提供。\n";
	cout << "代理模式也是这个样子的，如果代理能够处理的东西，不用请求服务器了，直接返回给用户，而只有代理服务器不能处理的东西才会再次交给服务器去处理\n";
	cout << "当然这只是代理的一种策略就是为了能够加快访问速度，这样代理服务器就代替我们去访问服务器了。\n";
	cout << "在本实例中，小动物会向组委会提出不同的申请，如果低级组委会可以处理，就进行相应的操作；否则，就上报更高级的赛事组委会进行操作。低级组委会便是赛事组委会的代理服务器。\n\n\n";
	Sleep(2 * 1000);
	cout << "故事简介：\n";
	cout << "故事发生在动物运动会的挖洞锦标赛上...\n";
	Sleep(2 * 1000);
	cout << "作为一只擅长挖洞的穿山甲，你已经蝉联三届挖洞锦标赛的冠军了，这届的比赛也是势在必得！\n";
	Sleep(2 * 1000);
	cout << "随着一声枪响，比赛正式开始！你也一头扎进眼前坚硬的土壤，开始的全神贯注的竞技模式！\n";
	Sleep(2 * 1000);
	cout << "比赛如火如荼地进行着...\n";
	Sleep(3 * 1000);
	cout << "“滴――”哨声响起，比赛结束！你停下来，自信地抬起头。“这次发挥的比前几次还要好，冠军肯定是我的了！”你这样想到。\n";
	Sleep(2 * 1000);
	cout << "但是，下一幕发生的事却让你惊呆了！只见记分牌上，排名榜首的竟然是那名不见经传的小仓鼠！\n";
	Sleep(2 * 1000);
	cout << "你转身看向小仓鼠，他正在得意的微笑，同时，你的余光也瞥见，那场地边的狐狸裁判，嘴角竟也露出了一丝不易察觉的微笑...\n";
	Sleep(2 * 1000);
	cout << "*************************************************\n"
		<< "你可以采取以下措施：\n"
		<< "A：怎么会这样！我要回看录像！\n"
		<< "B：不行不行，小仓鼠一定是做了弊！我要申请重新比赛！\n"
		<< "C：感觉此事定有蹊跷，狐狸裁判一定有问题！我要投诉狐狸裁判！\n"
		<< "D：算了算了，这次没发挥好。备战一年，下届重回巅峰！\n"
		<< "*************************************************\n";

	int mm = 1;
	while(mm==1)
	{ 		
		cout << "\n接下来，请通过输入A、B、C、D来选择您想要做的事情：\n";
	    char M;
	    cin >> M;
		switch (M)
		{
		case 'A':
		{			
			myCom->askForVCR();
			mm = 2;
			break;
		}

		case 'B':
		{			
			myCom->askForRegame();
			mm = 2;
			break;
		}

		case 'C':
		{
			myCom->askForFire();
			mm = 2;
			break;
		}
		case 'D':
		{
			myCom->quit();
			mm = 2;
			break;
		}
		default:{
			cout << "您的动作过于前卫，有点脱离我们的故事线！请您在ABCD中选择一个！\n";
			break;
		}
			
		}
		
	}


};